diff --git a/layout/painting/nsDisplayList.h b/layout/painting/nsDisplayList.h
--- a/layout/painting/nsDisplayList.h
+++ b/layout/painting/nsDisplayList.h
@@ -3301,23 +3301,34 @@ class nsDisplayList {
   nsDisplayItem* RemoveBottom() {
     if (!mBottom) {
       return nullptr;
     }
 
     nsDisplayItem* bottom = mBottom->mValue;
 
     auto next = mBottom->mNext;
+#if (_M_IX86_FP >= 1) || defined(__SSE__) || defined(_M_AMD64) || defined(__amd64__)
+    if (next) {
+      _mm_prefetch((char *)next, _MM_HINT_NTA);
+    }
+#endif
     Deallocate(mBottom);
     mBottom = next;
 
     if (!mBottom) {
       // No bottom item means no items at all.
       mTop = nullptr;
     }
+#if (_M_IX86_FP >= 1) || defined(__SSE__) || defined(_M_AMD64) || defined(__amd64__)
+    else {
+      _mm_prefetch((char *)mBottom->mValue, _MM_HINT_NTA);
+      _mm_prefetch((char *)mBottom->mNext, _MM_HINT_NTA);
+    }
+#endif
 
     MOZ_ASSERT(mLength > 0);
     mLength--;
 
     return bottom;
   }
 
   /**
@@ -3429,16 +3440,21 @@ class nsDisplayList {
   }
 
   void DeallocateNodes() {
     Node* current = mBottom;
     Node* next = nullptr;
 
     while (current) {
       next = current->mNext;
+#if (_M_IX86_FP >= 1) || defined(__SSE__) || defined(_M_AMD64) || defined(__amd64__)
+      if (next) {
+        _mm_prefetch((char *)next, _MM_HINT_NTA);
+      }
+#endif
       Deallocate(current);
       current = next;
     }
   }
 
   inline void SetEmpty() {
     mBottom = nullptr;
     mTop = nullptr;
