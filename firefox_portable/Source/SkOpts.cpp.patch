diff --git a/gfx/skia/skia/src/core/SkOpts.cpp b/gfx/skia/skia/src/core/SkOpts.cpp
--- a/gfx/skia/skia/src/core/SkOpts.cpp
+++ b/gfx/skia/skia/src/core/SkOpts.cpp
@@ -21,32 +21,36 @@ namespace SkOpts {
     // Define default function pointer values here...
     // If our global compile options are set high enough, these defaults might even be
     // CPU-specialized, e.g. a typical x86-64 machine might start with SSE2 defaults.
     // They'll still get a chance to be replaced with even better ones, e.g. using SSE4.1.
     size_t raster_pipeline_lowp_stride  = SK_OPTS_NS::raster_pipeline_lowp_stride();
     size_t raster_pipeline_highp_stride = SK_OPTS_NS::raster_pipeline_highp_stride();
 
 #define M(st) (StageFn)SK_OPTS_NS::st,
-    StageFn ops_highp[] = { SK_RASTER_PIPELINE_OPS_ALL(M) };
+    static const StageFn g_default_ops_highp[] = { SK_RASTER_PIPELINE_OPS_ALL(M) };
+#undef M
+    constinit const StageFn* ops_highp = g_default_ops_highp;
+
+#define M(st) (StageFn)SK_OPTS_NS::lowp::st,
+    static const StageFn g_default_ops_lowp[] = { SK_RASTER_PIPELINE_OPS_LOWP(M) };
+#undef M
+    constinit const StageFn* ops_lowp = g_default_ops_lowp;
+
     StageFn just_return_highp = (StageFn)SK_OPTS_NS::just_return;
     void (*start_pipeline_highp)(size_t, size_t, size_t, size_t, SkRasterPipelineStage*,
                                  SkSpan<SkRasterPipelineContexts::MemoryCtxPatch>,
                                  uint8_t*) =
             SK_OPTS_NS::start_pipeline;
-#undef M
 
-#define M(st) (StageFn)SK_OPTS_NS::lowp::st,
-    StageFn ops_lowp[] = { SK_RASTER_PIPELINE_OPS_LOWP(M) };
     StageFn just_return_lowp = (StageFn)SK_OPTS_NS::lowp::just_return;
     void (*start_pipeline_lowp)(size_t, size_t, size_t, size_t, SkRasterPipelineStage*,
                                 SkSpan<SkRasterPipelineContexts::MemoryCtxPatch>,
                                 uint8_t*) =
             SK_OPTS_NS::lowp::start_pipeline;
-#undef M
 
     // Each Init_foo() is defined in src/opts/SkOpts_foo.cpp.
     void Init_hsw();
     void Init_skx();
     void Init_lasx();
 
     static bool init() {
     #if defined(SK_ENABLE_OPTIMIZE_SIZE)
