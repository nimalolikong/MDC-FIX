diff --git a/security/sandbox/common/SandboxSettings.h b/security/sandbox/common/SandboxSettings.h
--- a/security/sandbox/common/SandboxSettings.h
+++ b/security/sandbox/common/SandboxSettings.h
@@ -2,17 +2,17 @@
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #ifndef mozilla_SandboxSettings_h
 #define mozilla_SandboxSettings_h
 #include <cinttypes>
 
-#if defined(MOZ_PROFILE_GENERATE)
+#if defined(MOZ_PROFILE_GENERATE) || defined(MOZ_CS_PROFILE_GENERATE)
 #  include <string>
 #endif
 
 #include "nsIXULRuntime.h"
 
 #ifdef __OpenBSD__
 #  include "nsXULAppAPI.h"
 #  include "mozilla/ipc/UtilityProcessSandboxing.h"
@@ -23,17 +23,17 @@ namespace mozilla {
 // Return the current sandbox level. This is the
 // "security.sandbox.content.level" preference, but rounded up to the current
 // minimum allowed level. Returns 0 (disabled) if the env var
 // MOZ_DISABLE_CONTENT_SANDBOX is set.
 int GetEffectiveContentSandboxLevel();
 int GetEffectiveSocketProcessSandboxLevel();
 int GetEffectiveGpuSandboxLevel();
 
-#if defined(MOZ_PROFILE_GENERATE)
+#if defined(MOZ_PROFILE_GENERATE) || defined(MOZ_CS_PROFILE_GENERATE)
 #  if defined(XP_WIN)
 bool GetLlvmProfileDir(std::wstring& parentPath);
 #  else
 bool GetLlvmProfileDir(std::string& parentPath);
 #  endif
 #endif
 
 // Checks whether the effective content sandbox level is > 0.
